@model PagedList.IPagedList<HelloWorld.Models.ViewModels.ServiceCategoryVM>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Service Category Index";
    ViewBag.Sidemenu = true;
}

<h2>Service Category</h2>

@using (Html.BeginForm("Index", "ServiceCategories", FormMethod.Get))
{
    <table class="table" style="margin-bottom: 0px;">
        <tr>
            <td><input type="button" class="btn btn-default" value="Create" onclick="location.href='@Url.Action("Create", "ServiceCategories")'" /></td>
            <td align="right">
                <div class="btn-group">
                    @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", style = "display:inline;", @id = "searchinput" })
                    <span id="searchclear" class="glyphicon glyphicon-remove-circle"></span>
                </div>   
                <input type="submit" value="Search" class="btn btn-default" />
            </td>
        </tr>
    </table>
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Parent Category", "Index", new { sortOrder = ViewBag.SortParentCategory, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Category Name", "Index", new { sortOrder = ViewBag.SortCategoryName, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ParentCategory.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ServiceCategoryId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ServiceCategoryId }) |
                @if (item.ChildrenCategory.Count() == 0 && item.Services.Count() == 0)
                {
                    @Html.ActionLink("Delete", "Delete", new { id = item.ServiceCategoryId })
                }
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))